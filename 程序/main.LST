C51 COMPILER V9.54   MAIN                                                                  04/30/2024 09:01:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<key.c>
   2          #include<reg51.h>
   3          const unsigned char seven_seg[] = 
   4          {
   5            0xc0,0xf9,0xa4,0xb0,0x99,
   6            0x92,0x82,0xf8,0x80,0x90,
   7          };
   8          void display0(void)
   9          {               
  10   1             
  11   1        if(cp3 == 0){P2 = 0x01;P0 = seven_seg[sec % 10];}
  12   1        if(cp3 == 1){P2 = 0x02;P0 = seven_seg[sec / 10];}
  13   1        if(cp3 == 2){P2 = 0x04;P0 = 0xbf | flash;}
  14   1        if(cp3 == 3){P2 = 0x08;P0 = seven_seg[min % 10];}
  15   1        if(cp3 == 4){P2 = 0x10;P0 = seven_seg[min / 10];}
  16   1        if(cp3 == 5){P2 = 0x20;P0 = 0xbf | flash;}
  17   1        if(cp3 == 6){P2 = 0x40;P0 = seven_seg[hour % 10];}
  18   1        if(cp3 == 7){P2 = 0x80;P0 = seven_seg[hour / 10];}
  19   1      }
  20          void display1(void)
  21          {
  22   1        if(cp3 == 0){P2 = 0x01;P0 = seven_seg[sec % 10];}
  23   1        if(cp3 == 1){P2 = 0x02;P0 = seven_seg[sec / 10];}
  24   1        if(cp3 == 2){P2 = 0x04;P0 = 0xbf;}
  25   1        if(cp3 == 3){P2 = 0x08;P0 = seven_seg[min % 10];}
  26   1        if(cp3 == 4){P2 = 0x10;P0 = seven_seg[min / 10];}
  27   1        if(cp3 == 5){P2 = 0x20;P0 = 0xbf;}
  28   1        if(cp3 == 6){P2 = 0x40;P0 = seven_seg[hour % 10] | flash;}
  29   1        if(cp3 == 7){P2 = 0x80;P0 = seven_seg[hour / 10] | flash;}
  30   1      }
  31          void display2(void)
  32          {
  33   1        if(cp3 == 0){P2 = 0x01;P0 = seven_seg[sec % 10];}
  34   1        if(cp3 == 1){P2 = 0x02;P0 = seven_seg[sec / 10];}
  35   1        if(cp3 == 2){P2 = 0x04;P0 = 0xbf;}
  36   1        if(cp3 == 3){P2 = 0x08;P0 = seven_seg[min % 10] | flash;}
  37   1        if(cp3 == 4){P2 = 0x10;P0 = seven_seg[min / 10] | flash;}
  38   1        if(cp3 == 5){P2 = 0x20;P0 = 0xbf;}
  39   1        if(cp3 == 6){P2 = 0x40;P0 = seven_seg[hour % 10];}
  40   1        if(cp3 == 7){P2 = 0x80;P0 = seven_seg[hour / 10];}
  41   1      }
  42          
  43          void display3(void)
  44          {
  45   1        if(cp3 == 0){P2 = 0x01;P0 = seven_seg[sec % 10] | flash;}
  46   1        if(cp3 == 1){P2 = 0x02;P0 = seven_seg[sec / 10] | flash;}
  47   1        if(cp3 == 2){P2 = 0x04;P0 = 0xbf;}
  48   1        if(cp3 == 3){P2 = 0x08;P0 = seven_seg[min % 10];}
  49   1        if(cp3 == 4){P2 = 0x10;P0 = seven_seg[min / 10];}
  50   1        if(cp3 == 5){P2 = 0x20;P0 = 0xbf;}
  51   1        if(cp3 == 6){P2 = 0x40;P0 = seven_seg[hour % 10];}
  52   1        if(cp3 == 7){P2 = 0x80;P0 = seven_seg[hour / 10];}
  53   1      }
  54          
  55          void timer0_isr(void) interrupt 1
C51 COMPILER V9.54   MAIN                                                                  04/30/2024 09:01:23 PAGE 2   

  56          {
  57   1        
  58   1        TH0 = (65535 - 2000) / 255;
  59   1        TL0 = (65535 - 2000) % 255;
  60   1        cp++;
  61   1        if(cp >= 250)
  62   1        {
  63   2          cp = 0;
  64   2          cp2++;
  65   2          flash = ~flash;
  66   2        }
  67   1        if(cp2 >= 2)
  68   1        {
  69   2          cp2 = 0;
  70   2          sec++;
  71   2          if(sec >= 60){sec = 0; min++;}
  72   2          if(min >= 60){min = 0; hour++;}
  73   2          if(hour >= 24)hour=0;
  74   2        }
  75   1        
  76   1        if(guanjian == 0)display0(); 
  77   1        if(guanjian == 1)display1(); 
  78   1        if(guanjian == 2)display2();
  79   1        if(guanjian == 3)display3();
  80   1        cp3++;
  81   1        if(cp3 >= 8)cp3 = 0;
  82   1      }
  83          
  84          void timer0_init(void)
  85          {
  86   1        TMOD = 0x01;
  87   1        
  88   1        TH0 = (65535 - 2000) / 255;
  89   1        TL0 = (65535 - 2000) % 255; 
  90   1        EA = 1;
  91   1        ET0 = 1;
  92   1        TR0 = 1;
  93   1      }
  94          void main()
  95          {
  96   1        timer0_init();
  97   1        while(1)
  98   1        {
  99   2            key();
 100   2        }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    907    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
